}
sapply(pitches_2020_regular, count_na)
sapply(pitches_2020_post, count_na)
na.omit(pitches_2020_regular)
na.omit(pitches_2020_post)
nrow
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("class")
# read subset of data
pitches_2020_regular = readr::read_csv("data/pitches_2020_regular.csv")
pitches_2020_missing = readr::read_csv("data/pitches_2020_missing.csv")
pitches_2020_post = readr::read_csv("data/pitches_2020_post.csv")
head(pitches_2020_regular)
count_na = function(x) {
sum(is.na(x))
}
sapply(pitches_2020_regular, count_na)
sapply(pitches_2020_post, count_na)
head(pitches_2020_regular)
count_na = function(x) {
sum(is.na(x))
}
sapply(pitches_2020_regular, count_na)
sapply(pitches_2020_post, count_na)
na.omit(pitches_2020_post)
na.omit(pitches_2020_regular)
pitches_reg = pitches_2020_regular[, c(1,3,4,5,6,13:25)]
pitches_post = pitches_2020_post[, c(1,3,4,5,6,13:25)]
pitches_reg$pitch_type = factor(pitches_reg$pitch_type, level= c("SI", "SL", "CH", "FF", "CU", "FC", "FS"))
pitches_post$pitch_type = factor(pitches_post$pitch_type, level= c("SI", "SL", "CH", "FF", "CU", "FC", "FS"))
knn_model = knn3(pitch_type ~ ., data = pitches_reg, k = 10)
tst_pred_un = predict(knn_model, pitches_post, type = "class")
View(pitches_2020_missing)
head(pitches_2020_regular)
count_na = function(x) {
sum(is.na(x))
}
sapply(pitches_2020_regular, count_na)
sapply(pitches_2020_post, count_na)
na.omit(pitches_2020_post)
na.omit(pitches_2020_regular)
pitches_reg = pitches_2020_regular[, c(1,4,5,6,13:24)]
pitches_post = pitches_2020_post[, c(1,4,5,6,13:24)]
pitches_reg$pitch_type = factor(pitches_reg$pitch_type, level= c("SI", "SL", "CH", "FF", "CU", "FC", "FS"))
pitches_post$pitch_type = factor(pitches_post$pitch_type, level= c("SI", "SL", "CH", "FF", "CU", "FC", "FS"))
knn_model = knn3(pitch_type ~ ., data = pitches_reg, k = 10)
tst_pred_un = predict(knn_model, pitches_post, type = "class")
tst_pred_un = predict(knn_model, pitches_post, type = "class")
calc_class_err = function(actual, predicted) {
mean(actual != predicted)
}
calc_class_err(pitches_post$pitch_type, tst_pred_un)
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("class")
# read subset of data
pitches_2020_regular = readr::read_csv("data/pitches_2020_regular.csv")
pitches_2020_missing = readr::read_csv("data/pitches_2020_missing.csv")
pitches_2020_post = readr::read_csv("data/pitches_2020_post.csv")
head(pitches_2020_regular)
count_na = function(x) {
sum(is.na(x))
}
sapply(pitches_2020_regular, count_na)
sapply(pitches_2020_post, count_na)
na.omit(pitches_2020_post)
na.omit(pitches_2020_regular)
pitches_reg = pitches_2020_regular[, c(1,4,5,6,13:24)]
pitches_post = pitches_2020_post[, c(1,4,5,6,13:24)]
pitches_reg$pitch_type = factor(pitches_reg$pitch_type, level= c("SI", "SL", "CH", "FF", "CU", "FC", "FS"))
pitches_post$pitch_type = factor(pitches_post$pitch_type, level= c("SI", "SL", "CH", "FF", "CU", "FC", "FS"))
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
knitr::opts_chunk$set(echo = FALSE, fig.align = 'center')
# load packages
library("class")
# read subset of data
pitches_2020_regular = readr::read_csv("data/pitches_2020_regular.csv")
pitches_2020_missing = readr::read_csv("data/pitches_2020_missing.csv")
pitches_2020_post = readr::read_csv("data/pitches_2020_post.csv")
head(pitches_2020_regular)
count_na = function(x) {
sum(is.na(x))
}
sapply(pitches_2020_regular, count_na)
sapply(pitches_2020_post, count_na)
na.omit(pitches_2020_post)
na.omit(pitches_2020_regular)
pitches_reg = pitches_2020_regular[, c(1,4,5,6,13:24)]
pitches_post = pitches_2020_post[, c(1,4,5,6,13:24)]
pitches_reg$pitch_type = factor(pitches_reg$pitch_type, level= c("SI", "SL", "CH", "FF", "CU", "FC", "FS"))
pitches_post$pitch_type = factor(pitches_post$pitch_type, level= c("SI", "SL", "CH", "FF", "CU", "FC", "FS"))
knn_model1 = knn3(pitch_type ~ ., data = pitches_reg, k = 10)
knn_model2 = knn3(pitch_type ~ ., data = pitches_reg, k = 100)
knn_model3 = knn3(pitch_type ~ ., data = pitches_reg, k = 1)
tst_pred_un1 = predict(knn_model, pitches_post, type = "class")
tst_pred_un1 = predict(knn_model1, pitches_post, type = "class")
tst_pred_un2 = predict(knn_model2, pitches_post, type = "class")
tst_pred_un3 = predict(knn_model3, pitches_post, type = "class")
calc_class_err = function(actual, predicted) {
mean(actual != predicted)
}
error1 = calc_class_err(pitches_post$pitch_type, tst_pred_un1)
error2 = calc_class_err(pitches_post$pitch_type, tst_pred_un2)
error3 = calc_class_err(pitches_post$pitch_type, tst_pred_un3)
View(knn_model1)
View(knn_model2)
View(knn_model2)
View(knn_model2)
plot(knn_model1)
View(pitches_reg)
knn_model4 = knn3(pitch_type ~ scaled(release_pos_x) + scaled(release_pos_y) + scaled(release_pos_z) + scaled(pfx_x) + scaled(pfx_z) + scaled(plate_x) + scaled(plate_z) + scaled(vx0)+ scaled(vy0) + scaled(vz0) + scaled(ax) + scaled(ay) + scaled(az) + scaled(effective_speed) + scaled(release_spin_rate), data = pitches_reg, k = 10)
knn_model4 = knn3(pitch_type ~ scale(release_pos_x) + scale(release_pos_y) + scale(release_pos_z) + scale(pfx_x) + scale(pfx_z) + scale(plate_x) + scale(plate_z) + scale(vx0)+ scale(vy0) + scale(vz0) + scale(ax) + scale(ay) + scale(az) + scale(effective_speed) + scale(release_spin_rate), data = pitches_reg, k = 10)
knn_model4 = knn3(pitch_type ~ scale(release_pos_x) + scale(release_pos_y) + scale(release_pos_z) + scale(pfx_x) + scale(pfx_z) + scale(plate_x) + scale(plate_z) + scale(vx0)+ scale(vy0) + scale(vz0) + scale(ax) + scale(ay) + scale(az) + scale(effective_speed) + scale(release_spin_rate), data = pitches_reg, k = 10)
error4 = calc_class_err(pitches_post$pitch_type, tst_pred_un4)
tst_pred_un4 = predict(knn_model4, pitches_post, type = "class")
knn_model4 = knn3(pitch_type ~ scale(release_pos_x) + scale(release_pos_y) + scale(release_pos_z) + scale(pfx_x) + scale(pfx_z) + scale(plate_x) + scale(plate_z) + scale(vx0)+ scale(vy0) + scale(vz0) + scale(ax) + scale(ay) + scale(az) + scale(effective_speed) + scale(release_spin_rate), data = pitches_reg, k = 10)
error4 = calc_class_err(pitches_post$pitch_type, tst_pred_un4)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(price ~ lotsize + sqrft + bdrms)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(price ~ lotsize + sqrft + bdrms)
summary(model)
install.packages("car")
library("car")
library(car)
library(car)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(price ~ lotsize + sqrft + bdrms)
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(price ~ lotsize + sqrft + bdrms)
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coefficients(model, vcov.=model2)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(price ~ lotsize + sqrft + bdrms)
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coefficients(model, vcov.=model2)
summary(model2)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(price ~ lotsize + sqrft + bdrms)
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coefficients(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(price ~ lotsize + sqrft + bdrms)
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = summary(model, vcov.=model2)
mod.HC1
install.packages(sandwich)
install.packages("lmtest")
library("lmtest")
library(lmtest)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(price ~ lotsize + sqrft + bdrms)
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(log(price) ~ lotsize + sqrft + bdrms)
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(log(price) ~ log(lotsize) + log(sqrft) + log(bdrms)
summary(model)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(log(price) ~ log(lotsize) + log(sqrft) + log(bdrms))
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
hprice1 =  read.table("hprice1.txt")
attach(hprice1)
lotsize = V4
sqrft = V5
bdrms = V3
price = V1
model = lm(log(price) ~ log(lotsize) + log(sqrft) + bdrms)
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
summary(model)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
summary(model1)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
summary(mod.HC1)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
model2 = hccm(model, type = "hc1")
mod.HC1 = coefficients(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
model2 = hccm(model, type = "hc1")
mod.HC1 = Ftest(model, vcov.=model2)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
model2 = hccm(model, type = "hc1")
mod.HC1 = anova(model, vcov.=model2)
install.packages("alr3")
library(alr3)
library(alr3)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
bptest(model)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
bptest(model1)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
summary(model1)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
vote1 =  read.table("vote1.txt")
attach(vote1)
voteA = V4
prtystrA = V7
democA = V3
expendA = V5
expendB = V6
model = lm(voteA ~ prtystrA + democA + log(expendA) +log(expendB))
residuals = residuals(model)
model1 = lm(residuals ~ prtystrA + democA + log(expendA) +log(expendB))
summary(model1)
bptest(model, model)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
meap01 =  read.table("meap01.txt")
attach(meap01)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
meap01 =  read.table("meap01.txt")
attach(meap01)
math4 = V3
lunch = V5
enroll = V6
exppp = V7
model = lm(math4 ~ lunch + log(enroll) + log(exppp))
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
meap01 =  read.table("meap01.txt")
attach(meap01)
math4 = V3
lunch = V5
enroll = V6
exppp = V7
model = lm(math4 ~ lunch + log(enroll) + log(exppp))
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
meap01 =  read.table("meap01.txt")
attach(meap01)
math4 = V3
lunch = V5
enroll = V6
exppp = V7
model = lm(math4 ~ lunch + log(enroll) + log(exppp))
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
white.test(model)
install.packages("bstats")
install.packages("skedastic")
library(skedastic)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
meap01 =  read.table("meap01.txt")
attach(meap01)
math4 = V3
lunch = V5
enroll = V6
exppp = V7
model = lm(math4 ~ lunch + log(enroll) + log(exppp))
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
white_lm(model)
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
meap01 =  read.table("meap01.txt")
attach(meap01)
math4 = V3
lunch = V5
enroll = V6
exppp = V7
model = lm(math4 ~ lunch + log(enroll) + log(exppp))
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
x = white_lm(model)
x
setwd("/Users/albertwiryawan/Code/Class_GitRepos/Fall_2020/Econometrics/Problem Set #6/data")
meap01 =  read.table("meap01.txt")
attach(meap01)
math4 = V3
lunch = V5
enroll = V6
exppp = V7
model = lm(math4 ~ lunch + log(enroll) + log(exppp))
summary(model)
model2 = hccm(model, type = "hc1")
mod.HC1 = coeftest(model, vcov.=model2)
mod.HC1
white_lm(model)
